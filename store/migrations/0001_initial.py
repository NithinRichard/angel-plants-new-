# Generated by Django 5.0.3 on 2025-05-15 05:11

import ckeditor.fields
import django.core.validators
import django.db.models.deletion
import django_countries.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BlogCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('meta_title', models.CharField(blank=True, max_length=100)),
                ('meta_description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('average_rating', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True)),
                ('rating_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Blog Category',
                'verbose_name_plural': 'Blog Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='BlogTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('slug', models.SlugField(unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(unique=True)),
                ('description', models.TextField(blank=True)),
                ('image', models.ImageField(blank=True, upload_to='categories/')),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50, unique=True, verbose_name='coupon code')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('discount_type', models.CharField(choices=[('percentage', 'Percentage'), ('fixed_amount', 'Fixed Amount'), ('free_shipping', 'Free Shipping')], default='percentage', max_length=20, verbose_name='discount type')),
                ('discount_value', models.DecimalField(decimal_places=2, help_text='Percentage or fixed amount based on discount type', max_digits=10, verbose_name='discount value')),
                ('valid_from', models.DateTimeField(verbose_name='valid from')),
                ('valid_to', models.DateTimeField(verbose_name='valid to')),
                ('max_uses', models.PositiveIntegerField(default=0, help_text='0 for unlimited uses', verbose_name='maximum uses')),
                ('used_count', models.PositiveIntegerField(default=0, verbose_name='times used')),
                ('min_order_value', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='minimum order value')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'coupon',
                'verbose_name_plural': 'coupons',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProductTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Variation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='variation name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('product_type', models.CharField(help_text='Type of product this variation applies to', max_length=50, verbose_name='product type')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'variation',
                'verbose_name_plural': 'variations',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=200, unique_for_date='publish_date')),
                ('excerpt', models.TextField(blank=True, help_text='A short summary of the post')),
                ('content', ckeditor.fields.RichTextField()),
                ('featured_image', models.ImageField(blank=True, null=True, upload_to='blog/featured_images/')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published')], default='draft', max_length=10)),
                ('allow_comments', models.BooleanField(default=True)),
                ('view_count', models.PositiveIntegerField(default=0, editable=False)),
                ('meta_title', models.CharField(blank=True, max_length=100)),
                ('meta_description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('publish_date', models.DateTimeField(blank=True, null=True)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='blog_posts', to=settings.AUTH_USER_MODEL)),
                ('categories', models.ManyToManyField(related_name='blog_posts', to='store.blogcategory')),
                ('tags', models.ManyToManyField(blank=True, related_name='blog_posts', to='store.blogtag')),
            ],
            options={
                'ordering': ['-publish_date'],
                'get_latest_by': 'publish_date',
            },
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('abandoned', 'Abandoned'), ('converted', 'Converted to Order')], default='active', max_length=20)),
                ('item_count', models.PositiveIntegerField(default=0)),
                ('total', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='cart', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.CharField(max_length=32, unique=True, verbose_name='order number')),
                ('email', models.EmailField(max_length=255, verbose_name='email address')),
                ('first_name', models.CharField(max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(max_length=30, verbose_name='last name')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='phone')),
                ('address', models.TextField(verbose_name='shipping address')),
                ('city', models.CharField(max_length=100, verbose_name='city')),
                ('state', models.CharField(max_length=100, verbose_name='state')),
                ('postal_code', models.CharField(max_length=20, verbose_name='postal code')),
                ('country', models.CharField(default='India', max_length=100, verbose_name='country')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('shipped', 'Shipped'), ('delivered', 'Delivered'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded')], default='pending', max_length=20, verbose_name='status')),
                ('tracking_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='tracking number')),
                ('tracking_url', models.URLField(blank=True, max_length=500, null=True, verbose_name='tracking URL')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='total amount')),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='tax amount')),
                ('shipping_fee', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='shipping fee')),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='discount amount')),
                ('payment_method', models.CharField(default='cash_on_delivery', max_length=50, verbose_name='payment method')),
                ('payment_status', models.BooleanField(default=False, verbose_name='payment status')),
                ('payment_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='payment id')),
                ('payment_signature', models.CharField(blank=True, max_length=200, null=True, verbose_name='payment signature')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='notes')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'order',
                'verbose_name_plural': 'orders',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_id', models.CharField(max_length=100, unique=True, verbose_name='payment ID')),
                ('payment_method', models.CharField(choices=[('credit_card', 'Credit Card'), ('debit_card', 'Debit Card'), ('upi', 'UPI'), ('net_banking', 'Net Banking'), ('wallet', 'Wallet'), ('cod', 'Cash on Delivery')], max_length=20, verbose_name='payment method')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='amount')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed'), ('refunded', 'Refunded'), ('partially_refunded', 'Partially Refunded')], default='pending', max_length=20, verbose_name='status')),
                ('transaction_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='transaction ID')),
                ('payment_gateway_response', models.JSONField(blank=True, default=dict, verbose_name='payment gateway response')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='payment', to='store.order', verbose_name='order')),
            ],
            options={
                'verbose_name': 'payment',
                'verbose_name_plural': 'payments',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('sku', models.CharField(blank=True, max_length=50, unique=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('compare_at_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('cost_per_item', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('track_quantity', models.BooleanField(default=True)),
                ('allow_backorder', models.BooleanField(default=False)),
                ('description', models.TextField()),
                ('short_description', models.TextField(blank=True, max_length=200)),
                ('care_instructions', models.TextField(blank=True)),
                ('image', models.ImageField(upload_to='products/')),
                ('light_requirements', models.CharField(blank=True, max_length=100)),
                ('watering_needs', models.CharField(blank=True, max_length=100)),
                ('mature_size', models.CharField(blank=True, max_length=100)),
                ('difficulty_level', models.CharField(choices=[('easy', 'Easy'), ('moderate', 'Moderate'), ('difficult', 'Difficult')], default='easy', max_length=50)),
                ('meta_title', models.CharField(blank=True, max_length=100)),
                ('meta_description', models.TextField(blank=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_bestseller', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='store.category')),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='store.order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_items', to='store.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='products/additional/', verbose_name='image')),
                ('alt_text', models.CharField(blank=True, help_text='Alternative text for accessibility', max_length=200, verbose_name='alt text')),
                ('is_featured', models.BooleanField(default=False, help_text='Mark this image as the featured image', verbose_name='is featured')),
                ('order', models.PositiveIntegerField(default=0, help_text='Order in which the image appears', verbose_name='order')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_images', to='store.product', verbose_name='product')),
            ],
            options={
                'verbose_name': 'product image',
                'verbose_name_plural': 'product images',
                'ordering': ['order', 'created_at'],
            },
        ),
        migrations.AddField(
            model_name='product',
            name='additional_images',
            field=models.ManyToManyField(blank=True, related_name='additional_product_images', to='store.productimage'),
        ),
        migrations.AddField(
            model_name='product',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='products', to='store.producttag'),
        ),
        migrations.CreateModel(
            name='VariationOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='option name')),
                ('color_code', models.CharField(blank=True, help_text='Hex color code for color variations', max_length=20, verbose_name='color code')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('variation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='store.variation', verbose_name='variation')),
            ],
            options={
                'verbose_name': 'variation option',
                'verbose_name_plural': 'variation options',
                'ordering': ['variation', 'name'],
                'unique_together': {('variation', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_type', models.CharField(choices=[('shipping', 'Shipping Address'), ('billing', 'Billing Address')], max_length=20)),
                ('default', models.BooleanField(default=False)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('company', models.CharField(blank=True, max_length=100, null=True)),
                ('address_line1', models.CharField(max_length=255)),
                ('address_line2', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('postal_code', models.CharField(max_length=20)),
                ('country', django_countries.fields.CountryField(max_length=2)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Addresses',
                'ordering': ['-default', '-updated_at'],
                'unique_together': {('user', 'address_type', 'default')},
            },
        ),
        migrations.CreateModel(
            name='OrderActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('status_change', 'Status Change'), ('note_added', 'Note Added'), ('payment_received', 'Payment Received'), ('shipping_update', 'Shipping Update'), ('tracking_updated', 'Tracking Updated'), ('customer_notified', 'Customer Notified'), ('other', 'Other')], default='other', max_length=20, verbose_name='activity type')),
                ('details', models.TextField(verbose_name='details')),
                ('note', models.TextField(blank=True, null=True, verbose_name='internal note')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='timestamp')),
                ('notification_sent', models.BooleanField(default=False, verbose_name='notification sent')),
                ('notification_sent_at', models.DateTimeField(blank=True, null=True, verbose_name='notification sent at')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP address')),
                ('user_agent', models.TextField(blank=True, null=True, verbose_name='user agent')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='store.order', verbose_name='order')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'order activity',
                'verbose_name_plural': 'order activities',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['order', 'activity_type'], name='store_order_order_i_bd609c_idx'), models.Index(fields=['timestamp'], name='store_order_timesta_ba8742_idx')],
            },
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='store.cart')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cart_items', to='store.product')),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('cart', 'product')},
            },
        ),
        migrations.CreateModel(
            name='ProductRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveSmallIntegerField(choices=[(1, '1 - Poor'), (2, '2 - Fair'), (3, '3 - Good'), (4, '4 - Very Good'), (5, '5 - Excellent')])),
                ('review', models.TextField(blank=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='store.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_ratings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Product Rating',
                'verbose_name_plural': 'Product Ratings',
                'ordering': ['-created_at'],
                'unique_together': {('user', 'product')},
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveSmallIntegerField(choices=[(1, '1 - Poor'), (2, '2 - Fair'), (3, '3 - Good'), (4, '4 - Very Good'), (5, '5 - Excellent')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='rating')),
                ('title', models.CharField(max_length=200, verbose_name='review title')),
                ('comment', models.TextField(verbose_name='comment')),
                ('is_approved', models.BooleanField(default=False, verbose_name='is approved')),
                ('is_featured', models.BooleanField(default=False, verbose_name='is featured')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='store.product', verbose_name='product')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviews', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'review',
                'verbose_name_plural': 'reviews',
                'ordering': ['-created_at'],
                'unique_together': {('product', 'user')},
            },
        ),
        migrations.CreateModel(
            name='ProductVariation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price_adjustment', models.DecimalField(decimal_places=2, default=0.0, help_text='Additional cost (can be negative for discounts)', max_digits=10, verbose_name='price adjustment')),
                ('quantity', models.PositiveIntegerField(default=0, help_text='Available quantity for this variation', verbose_name='quantity')),
                ('sku', models.CharField(blank=True, help_text='Stock Keeping Unit', max_length=100, verbose_name='SKU')),
                ('is_default', models.BooleanField(default=False, help_text='Is this the default variation?', verbose_name='is default')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variations', to='store.product', verbose_name='product')),
                ('variation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_variations', to='store.variation', verbose_name='variation')),
                ('option', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_variations', to='store.variationoption', verbose_name='variation option')),
            ],
            options={
                'verbose_name': 'product variation',
                'verbose_name_plural': 'product variations',
                'ordering': ['product', 'variation', 'option'],
                'unique_together': {('product', 'variation', 'option')},
            },
        ),
        migrations.CreateModel(
            name='Wishlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1, help_text='Number of items', validators=[django.core.validators.MinValueValidator(1)], verbose_name='quantity')),
                ('notes', models.TextField(blank=True, help_text='Any additional notes about this item', verbose_name='notes')),
                ('is_public', models.BooleanField(default=False, help_text='Allow others to see this wishlist item', verbose_name='is public')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='updated at')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wishlist_items', to='store.product', verbose_name='product')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='wishlist_items', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'wishlist item',
                'verbose_name_plural': 'wishlist items',
                'db_table': 'store_wishlist',
                'ordering': ['-created_at'],
                'unique_together': {('user', 'product')},
            },
        ),
    ]
